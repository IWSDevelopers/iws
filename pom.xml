<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>net.iaeste.iws</groupId>
    <artifactId>iws</artifactId>
    <packaging>pom</packaging>
    <version>1.2-SNAPSHOT</version>
    <name>IWS</name>
    <description>IntraWeb Services</description>

    <modules>
        <module>iws-api</module>
        <module>iws-common</module>
        <module>iws-persistence</module>
        <module>iws-core</module>
        <module>iws-ejb</module>
        <module>iws-ws</module>
        <module>iws-ear</module>
        <module>iws-ws-client</module>
        <module>iws-client</module>
    </modules>

    <scm>
      <connection>scm:git:https://github.com/IWSDevelopers/iws.git</connection>
    </scm>

    <developers>
        <developer>
            <id>kim</id>
            <name>Kim NÃ¸rregaard Jensen</name>
            <email>kim@dawn.dk</email>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>pavel</id>
            <name>Pavel Fiala</name>
            <email>fiala_pavel@centrum.cz</email>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>michl</id>
            <name>Michael Pickelbauer</name>
            <email>michael.pickelbauer@gmail.com</email>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>matej</id>
            <name>Matej Kosco</name>
            <email>matej.kosco@gmail.com</email>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>martin</id>
            <name>Martin Eisfeld</name>
            <email>martin.eisfeld@gmx.net</email>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- SonarQube Settings -->
        <sonar.host.url>http://localhost:9000</sonar.host.url>
        <sonar.language>java</sonar.language>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <!-- The destination file for the code coverage report has to be set to the same value
             in the parent pom and in each module pom. Then JaCoCo will add up information in
             the same report, this way we get cross-module code coverage. -->
        <!-- To separate the information from the Unit & Integration testing,
             see: http://www.agile-engineering.net/2011/06/seperating-test-code-coverage-with.html -->
        <sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
        <destFile>${project.basedir}/../target/jacoco.exec</destFile>
        <!-- Sonar is by default analyzing everything. But Generated Code is beyond our
             control, so having error reports from this is just annoying.
             Legend: *  - zero or more characters
                     ** - zero or more directories -->
        <sonar.exclusions>file:**/generated*/**</sonar.exclusions>
        <!-- To ensure that the SureFire & JaCoCo plugin can play nice together,
             we have to pass the argLine information through them both. To
             ensure that it works, we're setting this empty property value. -->
        <argLine/>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.7.6.201602180812</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <goals>
                    <goal>test-jar</goal>
                </goals>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <debug>false</debug>
                    <encoding>UTF-8</encoding>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-surefire-plugin</artifactId>-->
                <!--<version>2.18.1</version>-->
                <!--<configuration>-->
                    <!--&lt;!&ndash; The surefire plugin supports running the execution of-->
                         <!--the JUnit tests in parallel, and with various options-->
                         <!--set. Although the "advertized" advantage is to speed up-->
                         <!--the test suite, is more or less crap, there is another-->
                         <!--advantage to running things in parallel. And that is-->
                         <!--to see how the system handles multiple threads that-->
                         <!--accesses it at the same time - in other words, how-->
                         <!--thread-safe is the system.-->
                           <!--Since each thread needs to build the Spring beans-->
                         <!--required by the tests, it means that the overall-->
                         <!--testing takes significantly longer and will eat more-->
                         <!--memory. If it makes the system too slow, please reduce-->
                         <!--the number of threads in the threadCount below. But-->
                         <!--note, that those changes should not be committed.-->
                           <!--Spring seems to have a problem with the in-memory-->
                         <!--database and running tests in parallel. Hence, these-->
                         <!--tests are not enabled by default. The setting is here-->
                         <!--merely to show how to configure it. An alternative to-->
                         <!--running the tests in parallel using Maven, is to use-->
                         <!--IntelliJ's forkmode for JUnit tests.-->
                           <!--One major problem with the SureFire plugin is, that-->
                         <!--it uses the argLine to set information, which clashes-->
                         <!--with JaCoCo which also uses the argLine, and getting-->
                         <!--both to play nice together is problematic!-->
                           <!--Parallel supports 'classes', 'methods' or 'both' &ndash;&gt;-->
                    <!--<parallel>none</parallel>-->
                    <!--<reuseForks>true</reuseForks>-->
                    <!--<argLine>-Xmx1024m ${argLine}</argLine>-->
                    <!--<threadCount>5</threadCount>-->
                <!--</configuration>-->
                <!--<goals>-->
                    <!--<goal>test</goal>-->
                <!--</goals>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.5</version>
                <executions>
                    <execution>
                        <id>jar</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <destFile>${project.basedir}/../target/jacoco.exec </destFile>
                    <append>true</append>
                </configuration>
                <executions>
                    <execution>
                        <id>agent-for-ut</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>coverage</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <parallel>none</parallel>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-report-plugin</artifactId>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iws-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iws-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iws-persistence</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iws-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iws-ejb</artifactId>
                <version>${project.version}</version>
                <type>ejb</type>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iws-ws</artifactId>
                <version>${project.version}</version>
                <type>war</type>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iws-ws-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iws-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>javax</groupId>
                <artifactId>javaee-api</artifactId>
                <version>7.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-csv</artifactId>
                <version>1.2</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.20</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>1.7.20</version>
                <scope>test</scope>
            </dependency>
            <!-- Some of the third-part libraries needed for the Client tests,
                 uses Log4J. We therefore use Log4J also to make sure we can
                 disable the logging of these, as it is noise. -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.7.20</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>5.2.4.Final</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <!-- We are using Spring & Hibernate for our testing, so we can
                     create EntityManager instances to use. However, there is a
                     problem in the combination of Spring & Hibernate, which is
                     causing test errors as we cannot create the initial setup,
                     which we need to run the tests.
                       Problem is present when upgrading to either us the JEE 7
                     framework, which includes JPA 2.1 or upgrading one or more
                     of the frameworks; Spring & Hibernate to later versions.
                       Until such time when it can be investigated what is
                     causing the problems, we're going to stay with these
                     versions, after all - it is not affecting production
                     code. -->
                <!--<version>5.1.0.Final</version>-->
                <version>4.1.6.Final</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>9.4.1208.jre7</version>
            </dependency>
            <dependency>
                <!-- For our in-memory testing, we're using HSQLDB -->
                <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>2.3.3</version>
            </dependency>
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>3.2.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>3.2.15.RELEASE</version>
                <!-- Plese don't upgrade from 3.2.x; it leads to test problems. -->
                <!--<version>4.2.5.RELEASE</version>-->
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>3.2.15.RELEASE</version>
                <!-- Plese don't upgrade from 3.2.x; it leads to test problems. -->
                <!--<version>4.2.5.RELEASE</version>-->
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>3.2.15.RELEASE</version>
                <!-- Plese don't upgrade from 3.2.x; it leads to test problems. -->
                <!--<version>4.2.5.RELEASE</version>-->
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>3.2.15.RELEASE</version>
                <!-- Plese don't upgrade from 3.2.x; it leads to test problems. -->
                <!--<version>4.2.5.RELEASE</version>-->
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>3.2.15.RELEASE</version>
                <!-- Plese don't upgrade from 3.2.x; it leads to test problems. -->
                <!--<version>4.2.5.RELEASE</version>-->
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>3.2.15.RELEASE</version>
                <!-- Plese don't upgrade from 3.2.x; it leads to test problems. -->
                <!--<version>4.2.5.RELEASE</version>-->
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>gsbase</groupId>
                <artifactId>gsbase</artifactId>
                <version>2.0.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>1.3</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>
