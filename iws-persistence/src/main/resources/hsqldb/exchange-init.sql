-- Please add the initialization of all Exchange related tables here
-- Note; The HSQLDB is for in-memory testing, hence it makes no sense to have
--  drop the tables and sequences first!

CREATE SEQUENCE address_sequence START WITH 1 INCREMENT BY 1;
CREATE TABLE addresses (
    id                 INT GENERATED BY DEFAULT AS SEQUENCE address_sequence PRIMARY KEY,
    street1            VARCHAR(100) DEFAULT '',
    street2            VARCHAR(100) DEFAULT '',
    zip                VARCHAR(100) DEFAULT '',
    city               VARCHAR(100) DEFAULT '',
    country_id         INTEGER      NOT NULL REFERENCES countries (id) ON DELETE RESTRICT,
    modified           TIMESTAMP    DEFAULT now(),
    created            TIMESTAMP    DEFAULT now()
);

CREATE SEQUENCE study_fields_sequence START WITH 1 INCREMENT BY 1;
CREATE TABLE study_fields (
    id                     INT GENERATED BY DEFAULT AS SEQUENCE study_fields_sequence PRIMARY KEY,
    modified               TIMESTAMP    DEFAULT now(),
    created                TIMESTAMP    DEFAULT now()
);

CREATE TABLE study_field2group (
    study_field_id     INTEGER NOT NULL REFERENCES study_fields (id) ON DELETE CASCADE,
    group_id           INTEGER NOT NULL REFERENCES groups (id) ON DELETE CASCADE,
    support            VARCHAR(10) DEFAULT 'yes',
    modified           TIMESTAMP DEFAULT now(),
    created            TIMESTAMP DEFAULT now()
);

CREATE SEQUENCE employer_sequence START WITH 1 INCREMENT BY 1;
CREATE TABLE employers (
    id                     INT GENERATED BY DEFAULT AS SEQUENCE employer_sequence PRIMARY KEY,
    name                   VARCHAR(100)         DEFAULT '',
    address_id             INTEGER      NOT NULL REFERENCES addresses (id) ON DELETE CASCADE ON UPDATE CASCADE,
    workplace              VARCHAR(100)         DEFAULT '',
    website                VARCHAR(100)         DEFAULT '',
    business               VARCHAR(100)         DEFAULT '',
    responsible_person     VARCHAR(100)         DEFAULT '',
    airport                VARCHAR(100)         DEFAULT '',
    transport              VARCHAR(100)         DEFAULT '',
    employees              VARCHAR(100)         DEFAULT '',
    modified               TIMESTAMP    DEFAULT now(),
    created                TIMESTAMP    DEFAULT now()
);

CREATE SEQUENCE studentfiles_sequence START WITH 1 INCREMENT BY 1;
CREATE TABLE student_files (
  id                INT GENERATED BY DEFAULT AS SEQUENCE studentfiles_sequence PRIMARY KEY,
  studentid         INTEGER,
  filetype          CHARACTER VARYING(1) DEFAULT 'f',
  filename          CHARACTER VARYING(100) NOT NULL,
  systemname        CHARACTER VARYING(100) DEFAULT '',
  filesize          INTEGER DEFAULT 0,
  folderid          INTEGER DEFAULT 1,
  mimetypeid        INTEGER DEFAULT 1,
  description       CHARACTER VARYING(250) DEFAULT '',
  keywords          CHARACTER VARYING(250) DEFAULT '',
  checksum          CHARACTER VARYING(32) DEFAULT '',
  modified          TIMESTAMP DEFAULT now(),
  created           TIMESTAMP DEFAULT now()
);

CREATE SEQUENCE student_sequence START WITH 1 INCREMENT BY 1;
CREATE TABLE students (
  id                INT GENERATED BY DEFAULT AS SEQUENCE student_sequence PRIMARY KEY,
  firstname         VARCHAR(100) NOT NULL,
  lastname          VARCHAR(100) NOT NULL,
  addressid         INTEGER REFERENCES addresses(id) ON DELETE CASCADE,
  countryid         INTEGER NOT NULL,
  phone             VARCHAR(20),
  termaddressid     INTEGER REFERENCES addresses(id) ON DELETE CASCADE,
  termphone         VARCHAR(20),
  termcountryid     INTEGER NOT NULL,
  email             VARCHAR(100) NOT NULL,
  alternativemail   VARCHAR(100),
  birthday          DATE,
  birthplace        VARCHAR(100),
  nationalityid     INTEGER,
  passportnumber    VARCHAR(100),
  passportissued    VARCHAR(100),
  passportvalidity  DATE,
  gender            character(1),
  maritalstatus     character(1),
  medicallyfit      character(1),
  university        VARCHAR(100),
  facultyid         INTEGER REFERENCES study_fields (id) ON DELETE SET NULL,
  specialization    VARCHAR(100),
  studycompleted    character(1),
  studyrequired     character(1),
  languages1id      INTEGER,
  languages2id      INTEGER,
  languages3id      INTEGER,
  fromdate          DATE,
  todate            DATE,
  requireloding     BOOLEAN,
  trainingreport    BOOLEAN,
  comment           VARCHAR(1000),
  filepicture       INTEGER REFERENCES student_files(id) ON DELETE CASCADE,
  filecv            INTEGER REFERENCES student_files(id) ON DELETE CASCADE,
  filecover         INTEGER REFERENCES student_files(id) ON DELETE CASCADE,
  fileother         INTEGER REFERENCES student_files(id) ON DELETE CASCADE,
  status            CHARACTER(1),
  modified          TIMESTAMP WITHOUT TIME ZONE,
  modifiedby        INTEGER,
  created           TIMESTAMP WITHOUT TIME ZONE,
  createdby         INTEGER,
  logincode         VARCHAR(100),
  completed         BOOLEAN DEFAULT FALSE
);

CREATE SEQUENCE offer_sequence  START WITH 1 INCREMENT BY 1;
CREATE TABLE offers (
    id                     INT GENERATED BY DEFAULT AS SEQUENCE offer_sequence PRIMARY KEY,
    group_id               INTEGER      NOT NULL REFERENCES groups (id) ON DELETE CASCADE,
    system_ref_no          VARCHAR(10),
    local_ref_no           VARCHAR(100)         NOT NULL,

    exchange_year          INTEGER,
    offer_year             INTEGER,
    is_archive             INTEGER      DEFAULT 0,
    deadline               DATE,
    expire                 DATE,

    employer_id            INTEGER      NOT NULL REFERENCES employers (id) ON DELETE CASCADE,
    hours_weekly           REAL,
    hours_daily            REAL,

    study_field_id         INTEGER      NOT NULL REFERENCES study_fields (id) ON DELETE CASCADE,
    faculty_other          VARCHAR(100)         DEFAULT '',
    specialization         VARCHAR(100)         DEFAULT '',
    study_completed        INTEGER,
    study_required         VARCHAR(1),
    language1              VARCHAR(100)         DEFAULT '',
    language1_level        INTEGER,
    language1or            BOOLEAN      DEFAULT false,
    language2              VARCHAR(100)         DEFAULT '',
    language2_level        INTEGER,
    language2or            BOOLEAN      DEFAULT false,
    language3              VARCHAR(100)         DEFAULT '',
    language3_level        INTEGER,
    other_requirements     VARCHAR(100),
    training_required      VARCHAR(100)         DEFAULT '',
    gender                 VARCHAR(1),

    work_kind              VARCHAR(100),
    work_type              INTEGER,
    weeksmin               INTEGER      NOT NULL,
    weeksmax               INTEGER      NOT NULL,
    from_date              DATE,
    to_date                DATE,
    from_date2             DATE,
    to_date2               DATE,
    holidays_from          DATE,
    holidays_to            DATE,
    payment                INTEGER,
    payment_frequency      INTEGER,
    deduction              VARCHAR(100)         DEFAULT '',

    lodging                VARCHAR(100)         DEFAULT '',
    lodging_cost           INTEGER,
    lodging_cost_frequency INTEGER,
    living_cost            INTEGER,
    living_cost_frequency  INTEGER,
    canteen                BOOLEAN      DEFAULT false,

    nomination_e           BOOLEAN      DEFAULT false,
    nomination_h           BOOLEAN      DEFAULT false,
    nomination_and_or      BOOLEAN      DEFAULT false,
    no_hard_copies         INTEGER      NOT null,

    require_student        BOOLEAN      DEFAULT false,
    comment                VARCHAR(100),

    answered               TIMESTAMP,
    status                 INTEGER,
    published              TIMESTAMP,
    published_by           INTEGER,
    modified               TIMESTAMP,
    modified_by            INTEGER,
    created                TIMESTAMP,
    created_by             INTEGER,
    country_id             INTEGER NOT NULL REFERENCES countries (id) ON DELETE RESTRICT,
    student_id             INTEGER REFERENCES students (id) ON DELETE SET NULL
);

CREATE TABLE offer2group (
    offer_id           INTEGER    REFERENCES offers (id) ON DELETE CASCADE,
    group_id           INTEGER    REFERENCES groups (id) ON DELETE CASCADE,
    student_id         INTEGER    REFERENCES students (id) ON DELETE SET NULL,
    status             VARCHAR(1) DEFAULT 'n',
    visible            BOOLEAN    DEFAULT true,
    comment            VARCHAR(100)       DEFAULT '',
    exchanged          BOOLEAN    DEFAULT false,
    answered_by        INTEGER    REFERENCES users (id),
    answered           TIMESTAMP,
    modified           TIMESTAMP,
    created_by         INTEGER    REFERENCES users (id),
    created            TIMESTAMP,
    is_archived        BOOLEAN    DEFAULT false NOT NULL
);