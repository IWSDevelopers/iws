-- =============================================================================
-- Please add the initialization of all Exchange related tables here
-- -----------------------------------------------------------------------------
-- Note; The HSQLDB is for in-memory testing, hence it makes no sense to have
--  drop the tables and sequences first!
-- =============================================================================
create sequence offers_sequence start with 100 increment by 1;
create table offers (
    id                        integer generated by default as sequence offers_sequence,
    external_id               varchar(36),
    ref_no                    varchar(255)  NOT NULL  CHECK(length(ref_no) > 0),
    canteen                   boolean,
    number_of_hard_copies     integer,
    currency                  varchar(3),
    weekly_hours              decimal(5,3)  NOT NULL,
    daily_hours               decimal(5,3),
    deduction                 varchar(20),
    employer_name             varchar(255)  NOT NULL  CHECK(length(employer_name) > 0),
    employer_address          varchar(255),
    employer_address_2        varchar(255),
    employer_business         varchar(255),
    employer_employees_cnt    integer,
    employer_website          varchar(255),
    from_date                 date          NOT NULL,
    to_date                   date          NOT NULL,
    from_date_2               date,
    to_date_2                 date,
    unavailable_from          date,
    unavailable_to            date,
    language_1                varchar(255)  NOT NULL,
    language_1_level          varchar(1)    NOT NULL,
    language_1_op             varchar(1),
    language_2                varchar(255),
    language_2_level          varchar(1),
    language_2_op             varchar(1),
    language_3                varchar(255),
    language_3_level          varchar(1),
    living_cost               decimal(12,2),
    living_cost_frequency     varchar(10),
    lodging_by                varchar(255),
    lodging_cost              decimal(12,2),
    lodging_cost_frequency    varchar(10),
    min_weeks                 integer       NOT NULL,
    max_weeks                 integer       NOT NULL,
    nearest_airport           varchar(255),
    nearest_pub_transport     varchar(255),
    nomination_deadline       date,
    other_requirements        varchar(500),
    payment                   decimal(12,2),
    payment_frequency         varchar(10),
    prev_training_req         boolean,
    work_description          varchar(1000) NOT NULL  CHECK(length(work_description) > 0),
    working_place             varchar(255),
    work_type                 char(1),
    study_levels              varchar(25)   NOT NULL  CHECK(length(study_levels) > 0),
    study_fields              varchar(1000) NOT NULL  CHECK(length(study_fields) > 0),
    specializations           varchar(1000),
    group_id                  integer       not null references groups (id) on delete cascade,
    status                    varchar(10),
    modified                  timestamp default now(),
    created                   timestamp default now(),

    /* Primary & Foreign Keys */
    constraint offer_pk primary key (id),

    /* Unique Constraints */
    constraint offer_unique_ref_no      unique (ref_no),
    constraint offer_unique_external_id unique (external_id),

    /* Not Null Constraints */
    constraint offer_notnull_id          check (id is not null),
    constraint offer_notnull_ref_no      check (ref_no is not null),
    constraint offer_notnull_external_id check (external_id is not null),
    constraint offer_notnull_modified    check (modified is not null),
    constraint offer_notnull_created     check (created is not null)
);

-- =============================================================================
-- Students
-- -----------------------------------------------------------------------------
-- Description of Table
-- =============================================================================
create sequence student_sequence start with 50 increment by 1;
create table students (
    id                  integer generated by default as sequence student_sequence,
    student_name        varchar(100),
    group_id            integer,
    modified            timestamp default now(),
    created             timestamp default now(),

    /* Primary & Foreign Keys */
    constraint student_pk          primary key (id),
    constraint student_fk_group_id foreign key (group_id) references groups (id),

    /* Unique Constraints */
    constraint student_student_name unique (student_name),

    /* Not Null Constraints */
    constraint student_notnull_student_name check (student_name is not null),
    constraint student_notnull_group_id     check (group_id is not null),
    constraint student_notnull_modified     check (modified is not null),
    constraint student_notnull_created      check (created is not null)
);


create sequence offer_to_group_sequence start with 50 increment by 1;
create table offer_to_group (
    id                 integer generated by default as sequence offer_to_group_sequence,
    offer_id           integer,
    group_id           integer,
    comment            varchar(100)  default '',
    modified           timestamp default now(),
    modified_by        integer,
    created            timestamp default now(),
    created_by         integer,

    /* Primary & Foreign Keys */
    constraint offer_to_group_pk              primary key (id),
    constraint offer_to_group_fk_offer_id     foreign key (offer_id) references offers (id) ON DELETE CASCADE,
    constraint offer_to_group_fk_group_id     foreign key (group_id) references groups (id) ON DELETE CASCADE,
    constraint offer_to_group_fk_modified_by  foreign key (modified_by) references users (id) ON DELETE SET NULL,
    constraint offer_to_group_fk_created_by   foreign key (created_by) references users (id) ON DELETE SET NULL,

    /* Not Null Constraints */
    constraint offer_to_group_notnull_offer_id  check (offer_id is not null),
    constraint offer_to_group_notnull_group_id  check (group_id is not null),
    constraint offer_to_group_notnull_modified  check (modified is not null),
    constraint offer_to_group_notnull_created   check (created is not null)
);
