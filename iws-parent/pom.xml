<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>net.iaeste.iws</groupId>
    <artifactId>iws-parent</artifactId>
    <packaging>pom</packaging>
    <version>1.1-SNAPSHOT</version>
    <name>IWS</name>
    <description>IntraWeb Services - Parent Module</description>

    <modules>
        <module>../iws-api</module>
        <module>../iws-common</module>
        <module>../iws-persistence</module>
        <module>../iws-core</module>
        <module>../iws-ejb</module>
        <module>../iws-ws</module>
        <module>../iws-ear</module>
        <module>../iws-ws-client</module>
        <module>../iws-client</module>
        <module>../iws-fitnesse</module>
    </modules>

    <organization>
        <name>IAESTE Internet Development Team</name>
        <url>https://www.iaeste.net/</url>
    </organization>

    <developers>
        <developer>
            <id>kim</id>
            <name>Kim NÃ¸rregaard Jensen</name>
            <email>kim@dawn.dk</email>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>pavel</id>
            <name>Pavel Fiala</name>
            <email>pavel.fiala@iaeste.cz</email>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>martin</id>
            <name>Martin Eisfeld</name>
            <email>martin.eisfeld@gmx.net</email>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                  <groupId>org.codehaus.mojo</groupId>
                  <artifactId>sonar-maven-plugin</artifactId>
                  <version>2.6</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <goals>
                    <goal>test-jar</goal>
                </goals>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <encoding>UTF-8</encoding>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.15</version>
                <configuration>
                    <!-- The surefire plugin supports running the execution of
                         the JUnit tests in parallel, and with various options
                         set. Although the "advertized" advantage is to speed up
                         the test suite, is more or less crap, there is another
                         advantage to running things in parallel. And that is
                         to see how the system handles multiple threads that
                         accesses it at the same time - in other words, how
                         thread-safe is the system.
                           Since each thread needs to build the Spring beans
                         required by the tests, it means that the overall
                         testing takes significantly longer and will eat more
                         memory. If it makes the system too slow, please reduce
                         the number of threads in the threadCount below. But
                         note, that those changes should not be committed.
                           Spring seems to have a problem with the in-memory
                         database and running tests in parallel. Hence, these
                         tests are not enabled by default. The setting is here
                         merely to show how to configure it. An alternative to
                         running the tests in parallel using Maven, is to use
                         IntelliJ's forkmode for JUnit tests.
                           Parallel supports 'classes', 'methods' or 'both' -->
                    <parallel>none</parallel>
                    <threadCount>5</threadCount>
                </configuration>
                <goals>
                    <goal>test</goal>
                </goals>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.5</version>
                <executions>
                    <execution>
                        <id>jar</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
              <version>0.7.4.201502262128</version>
                <configuration>
                    <includes>
                        <include>net.iaeste.iws.*</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>coverage</id>
            <build>
                <plugins>
                    <plugin>
                      <groupId>org.jacoco</groupId>
                      <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <parallel>none</parallel>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-report-plugin</artifactId>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iws-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iws-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iws-persistence</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iws-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iws-ejb</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iws-ws</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iws-ws-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iws-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <!-- It is the goal to move to WildFly 8.x which is JEE7
                     compatible. Some of the JPA related things are causing
                     problems if we're not moving to JPA 2.1, which is not part
                     of JEE6. -->
                <groupId>javax</groupId>
                <artifactId>javaee-api</artifactId>
                <version>6.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.hibernate.javax.persistence</groupId>
                <artifactId>hibernate-jpa-2.1-api</artifactId>
                <version>1.0.0.Final</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <!--<version>5.2.1.Final</version>-->
                <version>4.3.0.Final</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <!-- We're using Hibernate EntityManager for our Spring based
                     testing, and it is also used under Glassfish. However, for
                     our Spring based testing, the following versions are
                     causing problems:
                       Version 4.1.[7-12].Final
                       Version 4.2.*.Final
                       Version 4.3.*.Final
                     Note; it seems that Hibernate is supporting JPA 2.1 with
                     the later versions, which is the reason why we're having
                     problems. The fix should then be to move to JEE7, which
                     will hopefully happen once we've either made a split of IWS
                     & IW4 or have managed to migrate IW4 to JBoss. -->
                <!--<version>5.0.1.Final</version>-->
                <version>4.1.6.Final</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>9.3-1102-jdbc41</version>
            </dependency>
            <dependency>
                <!-- For our in-memory testing, we're using HSQLDB -->
                <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <!-- Note, there seems to be a bug in 2.3.3, which causes
                     test-setup problems with sub-queries for our inserts, so
                     please don't upgrade. -->
                <version>2.3.2</version>
            </dependency>
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>2.2.2</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>3.2.14.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>3.2.14.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>3.2.14.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>3.2.14.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>3.2.14.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>3.2.14.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-csv</artifactId>
                <version>1.0</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.12</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.7.12</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>1.7.12</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>2.3.21</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>gsbase</groupId>
                <artifactId>gsbase</artifactId>
                <version>2.0.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>1.3</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>1.3</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>
